Game Specifications document

CLASSES --------------------------------------------------------------------------------------------------

Alex
- Enemy
- Wumpus

Ashley
- Item manager/inventory (for info when interacted with)
- Sprite Sorting (combine w/ above?)
- Dialogue/story manager

- // game design document

Bharathi 
- // writer: writing text for dialogue/narration/pager/item text
	- designing puzzles? narrative? anything involving not coding
- HUD
     - mini map? 
     - screen transitions

Deepti
- GameControl

Kavi
- Navigation
     - maybe random generation if game design permits

Keerthana
- add whatever you want


Other
- Scorekeeper (use .xml, or JSON)
- Menu and MainControl
- Player
- Weapon
- // designing game map + rooms
- other listed features

GAME BRAINSTORM  ----------------------------------------------------------------------------------------
***
	add ideas; none are set in stone
***

- Game takes place in a hospital where a zombie outbreak has occurred (maybe by some noxious gas in the air system).
- Player must escape hospital and avoid or fight zombies
- 2.5D (pokemon/rpg-style) game view


- Navigation:
	- figure out some environment display system
		- probably tilemap-based map
	- walls have continuous colliders
	- system of classifying different rooms
		- system of keeping track of room contents (e.g. room 3h has 3 red zombies and 2 children)
	- method to load a new specific room (given a parameter)
		- character can only see contents of one room at a time
		- maybe (probably not) use scenes to load new rooms. Probably just hide (black out) unactive rooms. 
			Use scenes to load new floors
	- Player-based navi elements: (player will probably code these)
		- doors (press E down and up to enter)
	***** IMPORTANT ***	Each door contains info (a string name?) on the room it leads to. (to keep track of player location)
		- camera follows character (like Earthbound) so character is fixed at center of screen. 
			
	> navigation code flow: player presses 'e' down and up in door zone -> player lets GameControl know a 
		door wants to be opened -> GameControl tells NaviUI Monobehaviour to load intended room (+ HUD fade?) 
		-> GameControl tells Player their "location" has changed, potentially, if we're doing that weirdness

Possible features:
- combat system (weapons)
	Option 1: If you want to keep the "clay" idea: player has tourniqueted "zombie" arm (arm got bitten off and is infected). 
		They can steal the arms of zombies they've killed and sew them onto their own arm for power ups
	Option 2: Player uses things they find in the hospital (shooty shoots, pointy things, le crowbar, fire extinguisher) to attack 
		zombies. 
		
- enemy system
	- zombie swarms, or specialized zombie bosses, or both? What kind of enemy distribution do we want
	
- Wumpus: wanders around rooms
	- The mega zombie. Idk about backstory but its pretty gnarly
	*- Player may or may not be able to defeat it. We should think of some gameplay mechanic involving the wumpus 
		- maybe the wumpus has some electrical ability (causes anomalies, hence light flicker), which the player needs to 
			steal in order to open the hospital exit, but they can only defeat the wumpus after they gain some other 
			ability first
	- Lights: when player is within 1 room of wumpus, lights flicker. If they're in the room w/ wumpus, lights OUT! UR dead
	
- Timer or sanity: Player starts out infected; they have to escape the hospital before they turn into a zombie
	Option 1: Sanity bar: when it hits 0, player becomes a zombie. Player is more powerful when they are less sane (bc 
		zombies > humans). They may have to gamble their sanity to get through obstacles
	Option 2: Timer system: player has a watch they can pull up to check time. E.g. they get bitten at 10:00 am, and have 
		two in-game hours (until 12:00 pm) to escape before they become a zombie. 
		Certain game events happen at certain times (eg. at 11:20, the Wumpus appears. At 10:30 zombies from the 	
		pediatrics ward break loose, you know, etc.)
			Suboption (I feel like this would be a hassle): You can save people from getting infected (eg. Dr. Damsel gets 
				bitten by a pediatric-ward zombie at 10:35, but if you barricade the p-ward before 10:30 you can save 
				the good doctor)
- One-way pager: npc kid with a one-way pager
	- A really smart kid got trapped in the security camera room with a one-way pager (ofc) and is sending you messages 
		with useful info (eg. Wumpus location, reconnaissance, door passwords, puzzle info, backstory)
	- Kid makes bad jokes
	- Kid makes game less shooty and more feely
	- You can find the room where the kid is trapped and escort-mission them (piggyback ride?) out of the hospital 
	- You can press 'z' to sit down and unsit, prompting interaction with the kid. (e.g. the kid tells you to sit once for 'Yes'
		and twice for 'no', sit for 5 seconds to have a little chat, etc.)
		
- Feature: item info and inventory
	- rpg thing where interacting with items gives you a description of them
		- collect items to solve puzzles? -> need an inventory system. gross.
			- solve puzzles with the help of Pager kid?
			
- minimap of hospital
- save files
	

GAME NARRATIVE (rough) -----------------------------------------------------------------------------------
- phase 0: mc wakes up to hear a beeping pager. They're stuck in a room with a bleeding arm (their arm)
	- find tourniquet
	- escape room
- phase 1: encounter and rek zombies. gain powers
- phase 2: wumpus
- ending: escape hospital, where medics un-zombie mc

ART ------------------------------------------------------------------------------------------------------
- 16x16 or 32x32 px?

GAME CONTROLS --------------------------------------------------------------------------------------------

what ever

tips :p  ---------------------------------------------------------------------------
https://www.gamasutra.com/blogs/HermanTulleken/20160812/279100/50_Tips_and_Best_Practices_for_Unity_2016_Edition.php (reaadd me)

	-  push and pull often to avoid merge conflicts (at least once an hour)
	-  keep the Update method as sparse as possible (it should only call methods; no logic).
	-  Use as many classes as needed to avoid clutter
	-  Create a prefab for every in-game object you make, in case it accidentally gets deleted. Remember to update the prefab as well
	-  We can't use System.Out.whatever so use Debug.Log("whatever") for debugging. This only works in MonoBehaviours though
	-  Delete the " : Monobehaviour " line from your script unless you actually need it to be a Monobehaviour

	-  Regardless of how many times you use the value, any specific number should be set to a private static readonly (final) variable. This also makes it easier to change the values later.
		-  e.g. private static readonly float PLAYER_SPEED = 4.8f;

	-  Renaming things in your code: don’t just delete the text and retype it. Right-click the method, variable, file, etc. you want to rename and press “rename”—this lets you rename all instances of the name at once.
		-  in Unity, you have to rename C# scripts twice: first, go to Unity right-click the script you want to rename and press “rename” (to rename the file name).
		-  Then, open the script and right-click its name to rename (rename the class’s name). Class and file names have to match.
	- set sprite pivot points to the bottom center of sprites, not the middle
	
techniques ----------------------------------------------------------------------------------------------------

- Coroutines: use for actions that occur over time (like transitions)
- Event system: use to listen for a certain trigger (e.g. door opening)
	https://www.youtube.com/watch?v=gx0Lt4tCDE0
- State machine: use to 'plug in' different behaviors (e.g. equipping different weapons, enemy behavior) instead of using
	case and switch or if/else statements

